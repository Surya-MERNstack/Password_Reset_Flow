{"ast":null,"code":"var _jsxFileName = \"F:\\\\B46- Project\\\\Nodeprojects\\\\password-flow\\\\ForntEnd\\\\src\\\\components\\\\PasswordReset\\\\index.jsx\",\n    _s = $RefreshSig$();\n\n// import { useEffect, useState, Fragment } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n// import styles from \"./styles.module.css\";\n// const PasswordReset = () => {\n// \tconst [validUrl, setValidUrl] = useState(false);\n// \tconst [password, setPassword] = useState(\"\");\n// \tconst [msg, setMsg] = useState(\"\");\n// \tconst [error, setError] = useState(\"\");\n// \tconst param = useParams();\n// \tconst url = `http://localhost:8010/api/password-reset/${param.id}/${param.token}`;\n// \tuseEffect(() => {\n// \t\tconst verifyUrl = async () => {\n// \t\t\ttry {\n// \t\t\t\tawait axios.get(url);\n// \t\t\t\tsetValidUrl(true);\n// \t\t\t} catch (error) {\n// \t\t\t\tsetValidUrl(false);\n// \t\t\t}\n// \t\t};\n// \t\tverifyUrl();\n// \t}, [param, url]);\n// \tconst handleSubmit = async (e) => {\n// \t\te.preventDefault();\n// \t\ttry {\n// \t\t\tconst { data } = await axios.post(url, { password });\n// \t\t\tsetMsg(data.message);\n// \t\t\tsetError(\"\");\n// \t\t\twindow.location = \"/login\";\n// \t\t} catch (error) {\n// \t\t\tif (\n// \t\t\t\terror.response &&\n// \t\t\t\terror.response.status >= 400 &&\n// \t\t\t\terror.response.status <= 500\n// \t\t\t) {\n// \t\t\t\tsetError(error.response.data.message);\n// \t\t\t\tsetMsg(\"\");\n// \t\t\t}\n// \t\t}\n// \t};\n// \treturn (\n// \t\t<Fragment>\n// \t\t\t{validUrl ? (\n// \t\t\t\t<div className={styles.container}>\n// \t\t\t\t\t<form className={styles.form_container} onSubmit={handleSubmit}>\n// \t\t\t\t\t\t<h1>Add New Password</h1>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\ttype=\"password\"\n// \t\t\t\t\t\t\tplaceholder=\"Password\"\n// \t\t\t\t\t\t\tname=\"password\"\n// \t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n// \t\t\t\t\t\t\tvalue={password}\n// \t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\tclassName={styles.input}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{error && <div className={styles.error_msg}>{error}</div>}\n// \t\t\t\t\t\t{msg && <div className={styles.success_msg}>{msg}</div>}\n// \t\t\t\t\t\t<button type=\"submit\" className={styles.green_btn}>\n// \t\t\t\t\t\t\tSubmit\n// \t\t\t\t\t\t</button>\n// \t\t\t\t\t</form>\n// \t\t\t\t</div>\n// \t\t\t) : (\n// \t\t\t\t<h1>404 Not Found</h1>\n// \t\t\t)}\n// \t\t</Fragment>\n// \t);\n// };\n// export default PasswordReset;\nimport { useEffect, useState, Fragment } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordReset = () => {\n  _s();\n\n  const [validUrl, setValidUrl] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const param = useParams();\n  const url = `http://localhost:8010/api/password-reset/${param.id}/${param.token}`;\n  const history = useHistory();\n  useEffect(() => {\n    const verifyUrl = async () => {\n      try {\n        await axios.get(url);\n        setValidUrl(true);\n      } catch (error) {\n        setValidUrl(false);\n      }\n    };\n\n    verifyUrl();\n  }, [param, url]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const {\n        data\n      } = await axios.post(url, {\n        password\n      });\n      setMsg(data.message);\n      setError(\"\");\n      history.push(\"/login\"); // Redirect to the login page\n    } catch (error) {\n      if (error.response && error.response.status >= 400 && error.response.status <= 500) {\n        setError(error.response.data.message);\n        setMsg(\"\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: validUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form_container,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          required: true,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error_msg,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 23\n        }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.success_msg,\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.green_btn,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"404 Not Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordReset, \"Fmh99PBM4+j4a3u2Lv9iQGmfsrc=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = PasswordReset;\nexport default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["F:/B46- Project/Nodeprojects/password-flow/ForntEnd/src/components/PasswordReset/index.jsx"],"names":["useEffect","useState","Fragment","useParams","useHistory","axios","styles","PasswordReset","validUrl","setValidUrl","password","setPassword","msg","setMsg","error","setError","param","url","id","token","history","verifyUrl","get","handleSubmit","e","preventDefault","data","post","message","push","response","status","container","form_container","target","value","input","error_msg","success_msg","green_btn"],"mappings":"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","sourcesContent":["// import { useEffect, useState, Fragment } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import styles from \"./styles.module.css\";\r\n\r\n// const PasswordReset = () => {\r\n// \tconst [validUrl, setValidUrl] = useState(false);\r\n// \tconst [password, setPassword] = useState(\"\");\r\n// \tconst [msg, setMsg] = useState(\"\");\r\n// \tconst [error, setError] = useState(\"\");\r\n// \tconst param = useParams();\r\n// \tconst url = `http://localhost:8010/api/password-reset/${param.id}/${param.token}`;\r\n\r\n// \tuseEffect(() => {\r\n// \t\tconst verifyUrl = async () => {\r\n// \t\t\ttry {\r\n// \t\t\t\tawait axios.get(url);\r\n// \t\t\t\tsetValidUrl(true);\r\n// \t\t\t} catch (error) {\r\n// \t\t\t\tsetValidUrl(false);\r\n// \t\t\t}\r\n// \t\t};\r\n// \t\tverifyUrl();\r\n// \t}, [param, url]);\r\n\r\n// \tconst handleSubmit = async (e) => {\r\n// \t\te.preventDefault();\r\n// \t\ttry {\r\n// \t\t\tconst { data } = await axios.post(url, { password });\r\n// \t\t\tsetMsg(data.message);\r\n// \t\t\tsetError(\"\");\r\n// \t\t\twindow.location = \"/login\";\r\n// \t\t} catch (error) {\r\n// \t\t\tif (\r\n// \t\t\t\terror.response &&\r\n// \t\t\t\terror.response.status >= 400 &&\r\n// \t\t\t\terror.response.status <= 500\r\n// \t\t\t) {\r\n// \t\t\t\tsetError(error.response.data.message);\r\n// \t\t\t\tsetMsg(\"\");\r\n// \t\t\t}\r\n// \t\t}\r\n// \t};\r\n\r\n// \treturn (\r\n// \t\t<Fragment>\r\n// \t\t\t{validUrl ? (\r\n// \t\t\t\t<div className={styles.container}>\r\n// \t\t\t\t\t<form className={styles.form_container} onSubmit={handleSubmit}>\r\n// \t\t\t\t\t\t<h1>Add New Password</h1>\r\n// \t\t\t\t\t\t<input\r\n// \t\t\t\t\t\t\ttype=\"password\"\r\n// \t\t\t\t\t\t\tplaceholder=\"Password\"\r\n// \t\t\t\t\t\t\tname=\"password\"\r\n// \t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n// \t\t\t\t\t\t\tvalue={password}\r\n// \t\t\t\t\t\t\trequired\r\n// \t\t\t\t\t\t\tclassName={styles.input}\r\n// \t\t\t\t\t\t/>\r\n// \t\t\t\t\t\t{error && <div className={styles.error_msg}>{error}</div>}\r\n// \t\t\t\t\t\t{msg && <div className={styles.success_msg}>{msg}</div>}\r\n// \t\t\t\t\t\t<button type=\"submit\" className={styles.green_btn}>\r\n// \t\t\t\t\t\t\tSubmit\r\n// \t\t\t\t\t\t</button>\r\n// \t\t\t\t\t</form>\r\n// \t\t\t\t</div>\r\n// \t\t\t) : (\r\n// \t\t\t\t<h1>404 Not Found</h1>\r\n// \t\t\t)}\r\n// \t\t</Fragment>\r\n// \t);\r\n// };\r\n\r\n// export default PasswordReset;\r\nimport { useEffect, useState, Fragment } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst PasswordReset = () => {\r\n  const [validUrl, setValidUrl] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const param = useParams();\r\n  const url = `http://localhost:8010/api/password-reset/${param.id}/${param.token}`;\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const verifyUrl = async () => {\r\n      try {\r\n        await axios.get(url);\r\n        setValidUrl(true);\r\n      } catch (error) {\r\n        setValidUrl(false);\r\n      }\r\n    };\r\n    verifyUrl();\r\n  }, [param, url]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await axios.post(url, { password });\r\n      setMsg(data.message);\r\n      setError(\"\");\r\n      history.push(\"/login\"); // Redirect to the login page\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.status >= 400 &&\r\n        error.response.status <= 500\r\n      ) {\r\n        setError(error.response.data.message);\r\n        setMsg(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {validUrl ? (\r\n        <div className={styles.container}>\r\n          <form className={styles.form_container} onSubmit={handleSubmit}>\r\n            <h1>Add New Password</h1>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n              required\r\n              className={styles.input}\r\n            />\r\n            {error && <div className={styles.error_msg}>{error}</div>}\r\n            {msg && <div className={styles.success_msg}>{msg}</div>}\r\n            <button type=\"submit\" className={styles.green_btn}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <h1>404 Not Found</h1>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n"]},"metadata":{},"sourceType":"module"}