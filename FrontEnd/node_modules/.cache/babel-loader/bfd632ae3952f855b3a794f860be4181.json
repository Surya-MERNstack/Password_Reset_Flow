{"ast":null,"code":"var _jsxFileName = \"F:\\\\B46- Project\\\\Nodeprojects\\\\password-flow\\\\ForntEnd\\\\src\\\\components\\\\PasswordReset\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, Fragment } from \"react\";\nimport axios from \"axios\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordReset = () => {\n  _s();\n\n  const [validUrl, setValidUrl] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const url = 'http://localhost:8010/api/password-reset/';\n  useEffect(() => {\n    const verifyUrl = async () => {\n      try {\n        await axios.get(url);\n        setValidUrl(true);\n      } catch (error) {\n        setValidUrl(false);\n      }\n    };\n\n    verifyUrl();\n  }, [param, url]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const {\n        data\n      } = await axios.post(url, {\n        password\n      });\n      setMsg(data.message);\n      setError(\"\");\n      window.location = \"/login\";\n    } catch (error) {\n      if (error.response && error.response.status >= 400 && error.response.status <= 500) {\n        setError(error.response.data.message);\n        setMsg(\"\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: validUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form_container,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          required: true,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error_msg,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.success_msg,\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.green_btn,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"404 Not Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n\n_s(PasswordReset, \"QSJGtYg0OSlyJYPuT4jiLjUTHRM=\");\n\n_c = PasswordReset;\nexport default PasswordReset; // import { useEffect, useState, Fragment } from \"react\";\n// import { useParams, useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import styles from \"./styles.module.css\";\n// const PasswordReset = () => {\n//   const [validUrl, setValidUrl] = useState(false);\n//   const [password, setPassword] = useState(\"\");\n//   const [msg, setMsg] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const param = useParams();\n//   const url = `http://localhost:8010/api/password-reset/${param.id}/${param.token}`;\n//   const navigate = useNavigate();\n//   useEffect(() => {\n//     const verifyUrl = async () => {\n//       try {\n//         await axios.get(url);\n//         setValidUrl(true);\n//       } catch (error) {\n//         setValidUrl(false);\n//       }\n//     };\n//     verifyUrl();\n//   }, [param, url]);\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const { data } = await axios.post(url, { password });\n//       setMsg(data.message);\n//       setError(\"\");\n//       navigate(\"/login\"); // Redirect to the login page\n//     } catch (error) {\n//       if (\n//         error.response &&\n//         error.response.status >= 400 &&\n//         error.response.status <= 500\n//       ) {\n//         setError(error.response.data.message);\n//         setMsg(\"\");\n//       }\n//     }\n//   };\n//   return (\n//     <Fragment>\n//       {validUrl ? (\n//         <div className={styles.container}>\n//           <form className={styles.form_container} onSubmit={handleSubmit}>\n//             <h1>Add New Password</h1>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               name=\"password\"\n//               onChange={(e) => setPassword(e.target.value)}\n//               value={password}\n//               required\n//               className={styles.input}\n//             />\n//             {error && <div className={styles.error_msg}>{error}</div>}\n//             {msg && <div className={styles.success_msg}>{msg}</div>}\n//             <button type=\"submit\" className={styles.green_btn}>\n//               Submit\n//             </button>\n//           </form>\n//         </div>\n//       ) : (\n//         <h1>404 Not Found</h1>\n//       )}\n//     </Fragment>\n//   );\n// };\n// export default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["F:/B46- Project/Nodeprojects/password-flow/ForntEnd/src/components/PasswordReset/index.jsx"],"names":["useEffect","useState","Fragment","axios","styles","PasswordReset","validUrl","setValidUrl","password","setPassword","msg","setMsg","error","setError","url","verifyUrl","get","param","handleSubmit","e","preventDefault","data","post","message","window","location","response","status","container","form_container","target","value","input","error_msg","success_msg","green_btn"],"mappings":"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","sourcesContent":["import { useEffect, useState, Fragment } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst PasswordReset = () => {\r\n\tconst [validUrl, setValidUrl] = useState(false);\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [msg, setMsg] = useState(\"\");\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst url = 'http://localhost:8010/api/password-reset/'\r\n\r\n\tuseEffect(() => {\r\n\t\tconst verifyUrl = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tawait axios.get(url);\r\n\t\t\t\tsetValidUrl(true);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetValidUrl(false);\r\n\t\t\t}\r\n\t\t};\r\n\t\tverifyUrl();\r\n\t}, [param, url]);\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tconst { data } = await axios.post(url, { password });\r\n\t\t\tsetMsg(data.message);\r\n\t\t\tsetError(\"\");\r\n\t\t\twindow.location = \"/login\";\r\n\t\t} catch (error) {\r\n\t\t\tif (\r\n\t\t\t\terror.response &&\r\n\t\t\t\terror.response.status >= 400 &&\r\n\t\t\t\terror.response.status <= 500\r\n\t\t\t) {\r\n\t\t\t\tsetError(error.response.data.message);\r\n\t\t\t\tsetMsg(\"\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{validUrl ? (\r\n\t\t\t\t<div className={styles.container}>\r\n\t\t\t\t\t<form className={styles.form_container} onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<h1>Add New Password</h1>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{error && <div className={styles.error_msg}>{error}</div>}\r\n\t\t\t\t\t\t{msg && <div className={styles.success_msg}>{msg}</div>}\r\n\t\t\t\t\t\t<button type=\"submit\" className={styles.green_btn}>\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<h1>404 Not Found</h1>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default PasswordReset;\r\n// import { useEffect, useState, Fragment } from \"react\";\r\n// import { useParams, useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import styles from \"./styles.module.css\";\r\n\r\n// const PasswordReset = () => {\r\n//   const [validUrl, setValidUrl] = useState(false);\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [msg, setMsg] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const param = useParams();\r\n//   const url = `http://localhost:8010/api/password-reset/${param.id}/${param.token}`;\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const verifyUrl = async () => {\r\n//       try {\r\n//         await axios.get(url);\r\n//         setValidUrl(true);\r\n//       } catch (error) {\r\n//         setValidUrl(false);\r\n//       }\r\n//     };\r\n//     verifyUrl();\r\n//   }, [param, url]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const { data } = await axios.post(url, { password });\r\n//       setMsg(data.message);\r\n//       setError(\"\");\r\n//       navigate(\"/login\"); // Redirect to the login page\r\n//     } catch (error) {\r\n//       if (\r\n//         error.response &&\r\n//         error.response.status >= 400 &&\r\n//         error.response.status <= 500\r\n//       ) {\r\n//         setError(error.response.data.message);\r\n//         setMsg(\"\");\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       {validUrl ? (\r\n//         <div className={styles.container}>\r\n//           <form className={styles.form_container} onSubmit={handleSubmit}>\r\n//             <h1>Add New Password</h1>\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Password\"\r\n//               name=\"password\"\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//               value={password}\r\n//               required\r\n//               className={styles.input}\r\n//             />\r\n//             {error && <div className={styles.error_msg}>{error}</div>}\r\n//             {msg && <div className={styles.success_msg}>{msg}</div>}\r\n//             <button type=\"submit\" className={styles.green_btn}>\r\n//               Submit\r\n//             </button>\r\n//           </form>\r\n//         </div>\r\n//       ) : (\r\n//         <h1>404 Not Found</h1>\r\n//       )}\r\n//     </Fragment>\r\n//   );\r\n// };\r\n\r\n// export default PasswordReset;\r\n\r\n"]},"metadata":{},"sourceType":"module"}