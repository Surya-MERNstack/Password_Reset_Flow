{"ast":null,"code":"var _jsxFileName = \"F:\\\\B46- Project\\\\Nodeprojects\\\\password-flow\\\\FrontEnd\\\\src\\\\components\\\\PasswordReset\\\\index.jsx\",\n    _s = $RefreshSig$();\n\n// import { useEffect, useState, Fragment } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n// import styles from \"./styles.module.css\";\n// const PasswordReset = () => {\n// \tconst [validUrl, setValidUrl] = useState(false);\n// \tconst [password, setPassword] = useState(\"\");\n// \tconst [msg, setMsg] = useState(\"\");\n// \tconst [error, setError] = useState(\"\");\n// \tconst param = useParams();\n// \tconst url = `http://localhost:8010/api/password-reset/${param.id}/${param.token}`;\n// \tuseEffect(() => {\n// \t\tconst verifyUrl = async () => {\n// \t\t\ttry {\n// \t\t\t\tawait axios.get(url);\n// \t\t\t\tsetValidUrl(true);\n// \t\t\t} catch (error) {\n// \t\t\t\tsetValidUrl(false);\n// \t\t\t}\n// \t\t};\n// \t\tverifyUrl();\n// \t}, [param, url]);\n// \tconst handleSubmit = async (e) => {\n// \t\te.preventDefault();\n// \t\ttry {\n// \t\t\tconst { data } = await axios.post(url, { password });\n// \t\t\tsetMsg(data.message);\n// \t\t\tsetError(\"\");\n// \t\t\twindow.location = \"/login\";\n// \t\t} catch (error) {\n// \t\t\tif (\n// \t\t\t\terror.response &&\n// \t\t\t\terror.response.status >= 400 &&\n// \t\t\t\terror.response.status <= 500\n// \t\t\t) {\n// \t\t\t\tsetError(error.response.data.message);\n// \t\t\t\tsetMsg(\"\");\n// \t\t\t}\n// \t\t}\n// \t};\n// \treturn (\n// \t\t<Fragment>\n// \t\t\t{validUrl ? (\n// \t\t\t\t<div className={styles.container}>\n// \t\t\t\t\t<form className={styles.form_container} onSubmit={handleSubmit}>\n// \t\t\t\t\t\t<h1>Add New Password</h1>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\ttype=\"password\"\n// \t\t\t\t\t\t\tplaceholder=\"Password\"\n// \t\t\t\t\t\t\tname=\"password\"\n// \t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n// \t\t\t\t\t\t\tvalue={password}\n// \t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\tclassName={styles.input}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{error && <div className={styles.error_msg}>{error}</div>}\n// \t\t\t\t\t\t{msg && <div className={styles.success_msg}>{msg}</div>}\n// \t\t\t\t\t\t<button type=\"submit\" className={styles.green_btn}>\n// \t\t\t\t\t\t\tSubmit\n// \t\t\t\t\t\t</button>\n// \t\t\t\t\t</form>\n// \t\t\t\t</div>\n// \t\t\t) : (\n// \t\t\t\t<h1>404 Not Found</h1>\n// \t\t\t)}\n// \t\t</Fragment>\n// \t);\n// };\n// export default PasswordReset;\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordReset = () => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const {\n    id,\n    token\n  } = useParams(); // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   try {\n  //     const url = `http://localhost:8010/api/users/${id}/reset-password/${token}`;\n  //     const { data } = await axios.put(url, { password });\n  //     setMsg(data.message);\n  //     setError(\"\");\n  //   } catch (error) {\n  //     if (\n  //       error.response &&\n  //       error.response.status >= 400 &&\n  //       error.response.status <= 500\n  //     ) {\n  //       setError(error.response.data.message);\n  //       setMsg(\"\");\n  //     }\n  //   }\n  // };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const url = `http://localhost:3000/password-reset/${id}/${token.token}`; // Update the URL to the correct endpoint\n\n      const {\n        data\n      } = await axios.post(url, {\n        password\n      }); // Use the correct HTTP method (POST) instead of PUT\n\n      setMsg(data.message);\n      setError(\"\");\n    } catch (error) {\n      if (error.response && error.response.status >= 400 && error.response.status <= 500) {\n        setError(error.response.data.message);\n        setMsg(\"\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form_container,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Password Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"New Password\",\n        name: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        className: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true,\n        className: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.error_msg,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.success_msg,\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.green_btn,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordReset, \"n+KHMY9wYnX1GKEoz0HE2VVKnKw=\", false, function () {\n  return [useParams];\n});\n\n_c = PasswordReset;\nexport default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["F:/B46- Project/Nodeprojects/password-flow/FrontEnd/src/components/PasswordReset/index.jsx"],"names":["React","useState","axios","useParams","styles","PasswordReset","password","setPassword","confirmPassword","setConfirmPassword","msg","setMsg","error","setError","id","token","handleSubmit","e","preventDefault","url","data","post","message","response","status","container","form_container","target","value","input","error_msg","success_msg","green_btn"],"mappings":"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","sourcesContent":["// import { useEffect, useState, Fragment } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import styles from \"./styles.module.css\";\r\n\r\n// const PasswordReset = () => {\r\n// \tconst [validUrl, setValidUrl] = useState(false);\r\n// \tconst [password, setPassword] = useState(\"\");\r\n// \tconst [msg, setMsg] = useState(\"\");\r\n// \tconst [error, setError] = useState(\"\");\r\n// \tconst param = useParams();\r\n// \tconst url = `http://localhost:8010/api/password-reset/${param.id}/${param.token}`;\r\n\r\n// \tuseEffect(() => {\r\n// \t\tconst verifyUrl = async () => {\r\n// \t\t\ttry {\r\n// \t\t\t\tawait axios.get(url);\r\n// \t\t\t\tsetValidUrl(true);\r\n// \t\t\t} catch (error) {\r\n// \t\t\t\tsetValidUrl(false);\r\n// \t\t\t}\r\n// \t\t};\r\n// \t\tverifyUrl();\r\n// \t}, [param, url]);\r\n\r\n// \tconst handleSubmit = async (e) => {\r\n// \t\te.preventDefault();\r\n// \t\ttry {\r\n// \t\t\tconst { data } = await axios.post(url, { password });\r\n// \t\t\tsetMsg(data.message);\r\n// \t\t\tsetError(\"\");\r\n// \t\t\twindow.location = \"/login\";\r\n// \t\t} catch (error) {\r\n// \t\t\tif (\r\n// \t\t\t\terror.response &&\r\n// \t\t\t\terror.response.status >= 400 &&\r\n// \t\t\t\terror.response.status <= 500\r\n// \t\t\t) {\r\n// \t\t\t\tsetError(error.response.data.message);\r\n// \t\t\t\tsetMsg(\"\");\r\n// \t\t\t}\r\n// \t\t}\r\n// \t};\r\n\r\n// \treturn (\r\n// \t\t<Fragment>\r\n// \t\t\t{validUrl ? (\r\n// \t\t\t\t<div className={styles.container}>\r\n// \t\t\t\t\t<form className={styles.form_container} onSubmit={handleSubmit}>\r\n// \t\t\t\t\t\t<h1>Add New Password</h1>\r\n// \t\t\t\t\t\t<input\r\n// \t\t\t\t\t\t\ttype=\"password\"\r\n// \t\t\t\t\t\t\tplaceholder=\"Password\"\r\n// \t\t\t\t\t\t\tname=\"password\"\r\n// \t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n// \t\t\t\t\t\t\tvalue={password}\r\n// \t\t\t\t\t\t\trequired\r\n// \t\t\t\t\t\t\tclassName={styles.input}\r\n// \t\t\t\t\t\t/>\r\n// \t\t\t\t\t\t{error && <div className={styles.error_msg}>{error}</div>}\r\n// \t\t\t\t\t\t{msg && <div className={styles.success_msg}>{msg}</div>}\r\n// \t\t\t\t\t\t<button type=\"submit\" className={styles.green_btn}>\r\n// \t\t\t\t\t\t\tSubmit\r\n// \t\t\t\t\t\t</button>\r\n// \t\t\t\t\t</form>\r\n// \t\t\t\t</div>\r\n// \t\t\t) : (\r\n// \t\t\t\t<h1>404 Not Found</h1>\r\n// \t\t\t)}\r\n// \t\t</Fragment>\r\n// \t);\r\n// };\r\n\r\n// export default PasswordReset;\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst PasswordReset = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const { id, token } = useParams();\r\n\r\n  // const handleSubmit = async (e) => {\r\n  //   e.preventDefault();\r\n  //   try {\r\n  //     const url = `http://localhost:8010/api/users/${id}/reset-password/${token}`;\r\n  //     const { data } = await axios.put(url, { password });\r\n  //     setMsg(data.message);\r\n  //     setError(\"\");\r\n  //   } catch (error) {\r\n  //     if (\r\n  //       error.response &&\r\n  //       error.response.status >= 400 &&\r\n  //       error.response.status <= 500\r\n  //     ) {\r\n  //       setError(error.response.data.message);\r\n  //       setMsg(\"\");\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const url = `http://localhost:3000/password-reset/${id}/${token.token}`; // Update the URL to the correct endpoint\r\n      const { data } = await axios.post(url, { password }); // Use the correct HTTP method (POST) instead of PUT\r\n      setMsg(data.message);\r\n      setError(\"\");\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.status >= 400 &&\r\n        error.response.status <= 500\r\n      ) {\r\n        setError(error.response.data.message);\r\n        setMsg(\"\");\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <form className={styles.form_container} onSubmit={handleSubmit}>\r\n        <h1>Password Reset</h1>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n          className={styles.input}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          required\r\n          className={styles.input}\r\n        />\r\n        {error && <div className={styles.error_msg}>{error}</div>}\r\n        {msg && <div className={styles.success_msg}>{msg}</div>}\r\n        <button type=\"submit\" className={styles.green_btn}>\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n"]},"metadata":{},"sourceType":"module"}