{"ast":null,"code":"var _jsxFileName = \"F:\\\\B46- Project\\\\Nodeprojects\\\\password-flow\\\\ForntEnd\\\\src\\\\components\\\\EmailVerify\\\\index.jsx\",\n    _s = $RefreshSig$();\n\n// import { useEffect, useState } from \"react\";\n// import { useParams, Link } from \"react-router-dom\";\n// import axios from \"axios\";\n// import success from \"../../images/success.png\";\n// import styles from \"./styles.module.css\";\n// import { Fragment } from \"react/cjs/react.production.min\";\n// const EmailVerify = () => {\n// \tconst [validUrl, setValidUrl] = useState(false);\n// \tconst param = useParams();\n// \tuseEffect(() => {\n// \t\tconst verifyEmailUrl = async () => {\n// \t\t\ttry {\n// \t\t\t\tconst url = `http://localhost:8010/api/users/${param.id}/verify/${param.token}`;\n// \t\t\t\tconst { data } = await axios.get(url);\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tsetValidUrl(true);\n// \t\t\t} catch (error) {\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tsetValidUrl(false);\n// \t\t\t}\n// \t\t};\n// \t\tverifyEmailUrl();\n// \t}, [param]);\n// \treturn (\n// \t\t<Fragment>\n// \t\t\t{validUrl ? (\n// \t\t\t\t<div className={styles.container}>\n// \t\t\t\t\t<img src={success} alt=\"success_img\" className={styles.success_img} />\n// \t\t\t\t\t<h1>Email verified successfully</h1>\n// \t\t\t\t\t<Link to=\"/login\">\n// \t\t\t\t\t\t<button className={styles.green_btn}>Login</button>\n// \t\t\t\t\t</Link>\n// \t\t\t\t</div>\n// \t\t\t) : (\n// \t\t\t\t<h1>404 Not Found</h1>\n// \t\t\t)}\n// \t\t</Fragment>\n// \t);\n// };\n// export default EmailVerify;\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport success from \"../../images/success.png\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmailVerify = () => {\n  _s();\n\n  const [validUrl, setValidUrl] = useState(false);\n  const {\n    id,\n    token\n  } = useParams();\n  useEffect(() => {\n    const verifyEmailUrl = async () => {\n      try {\n        const url = `http://localhost:8010/api/users/${id}/verify/${token}`;\n        const {\n          data\n        } = await axios.get(url);\n        console.log(data);\n        setValidUrl(true);\n      } catch (error) {\n        console.log(error);\n        setValidUrl(false);\n      }\n    };\n\n    verifyEmailUrl();\n  }, [id, token]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: validUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: success,\n        alt: \"success_img\",\n        className: styles.success_img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Email verified successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.green_btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"404 Not Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmailVerify, \"Bzq64tW7oRnqFFSQBDxIJZu/314=\", false, function () {\n  return [useParams];\n});\n\n_c = EmailVerify;\nexport default EmailVerify;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailVerify\");","map":{"version":3,"sources":["F:/B46- Project/Nodeprojects/password-flow/ForntEnd/src/components/EmailVerify/index.jsx"],"names":["React","useEffect","useState","Fragment","useParams","Link","axios","success","styles","EmailVerify","validUrl","setValidUrl","id","token","verifyEmailUrl","url","data","get","console","log","error","container","success_img","green_btn"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAEU,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAgBT,SAAS,EAA/B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,cAAc,GAAG,YAAY;AACjC,UAAI;AACF,cAAMC,GAAG,GAAI,mCAAkCH,EAAG,WAAUC,KAAM,EAAlE;AACA,cAAM;AAAEG,UAAAA;AAAF,YAAW,MAAMV,KAAK,CAACW,GAAN,CAAUF,GAAV,CAAvB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAL,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OALD,CAKE,OAAOS,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAT,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,KAVD;;AAWAG,IAAAA,cAAc;AACf,GAbQ,EAaN,CAACF,EAAD,EAAKC,KAAL,CAbM,CAAT;AAeA,sBACE,QAAC,QAAD;AAAA,cACGH,QAAQ,gBACP;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACa,SAAvB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEd,OAAV;AAAmB,QAAA,GAAG,EAAC,aAAvB;AAAqC,QAAA,SAAS,EAAEC,MAAM,CAACc;AAAvD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAEd,MAAM,CAACe,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,gBASP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlCD;;GAAMd,W;UAEkBL,S;;;KAFlBK,W;AAoCN,eAAeA,WAAf","sourcesContent":["// import { useEffect, useState } from \"react\";\r\n// import { useParams, Link } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import success from \"../../images/success.png\";\r\n// import styles from \"./styles.module.css\";\r\n// import { Fragment } from \"react/cjs/react.production.min\";\r\n\r\n// const EmailVerify = () => {\r\n// \tconst [validUrl, setValidUrl] = useState(false);\r\n// \tconst param = useParams();\r\n\r\n// \tuseEffect(() => {\r\n// \t\tconst verifyEmailUrl = async () => {\r\n// \t\t\ttry {\r\n// \t\t\t\tconst url = `http://localhost:8010/api/users/${param.id}/verify/${param.token}`;\r\n// \t\t\t\tconst { data } = await axios.get(url);\r\n// \t\t\t\tconsole.log(data);\r\n// \t\t\t\tsetValidUrl(true);\r\n// \t\t\t} catch (error) {\r\n// \t\t\t\tconsole.log(error);\r\n// \t\t\t\tsetValidUrl(false);\r\n// \t\t\t}\r\n// \t\t};\r\n// \t\tverifyEmailUrl();\r\n// \t}, [param]);\r\n\r\n// \treturn (\r\n// \t\t<Fragment>\r\n// \t\t\t{validUrl ? (\r\n// \t\t\t\t<div className={styles.container}>\r\n// \t\t\t\t\t<img src={success} alt=\"success_img\" className={styles.success_img} />\r\n// \t\t\t\t\t<h1>Email verified successfully</h1>\r\n// \t\t\t\t\t<Link to=\"/login\">\r\n// \t\t\t\t\t\t<button className={styles.green_btn}>Login</button>\r\n// \t\t\t\t\t</Link>\r\n// \t\t\t\t</div>\r\n// \t\t\t) : (\r\n// \t\t\t\t<h1>404 Not Found</h1>\r\n// \t\t\t)}\r\n// \t\t</Fragment>\r\n// \t);\r\n// };\r\n\r\n// export default EmailVerify;\r\n\r\n\r\n\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport success from \"../../images/success.png\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst EmailVerify = () => {\r\n  const [validUrl, setValidUrl] = useState(false);\r\n  const { id, token } = useParams();\r\n\r\n  useEffect(() => {\r\n    const verifyEmailUrl = async () => {\r\n      try {\r\n        const url = `http://localhost:8010/api/users/${id}/verify/${token}`;\r\n        const { data } = await axios.get(url);\r\n        console.log(data);\r\n        setValidUrl(true);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setValidUrl(false);\r\n      }\r\n    };\r\n    verifyEmailUrl();\r\n  }, [id, token]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {validUrl ? (\r\n        <div className={styles.container}>\r\n          <img src={success} alt=\"success_img\" className={styles.success_img} />\r\n          <h1>Email verified successfully</h1>\r\n          <Link to=\"/login\">\r\n            <button className={styles.green_btn}>Login</button>\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <h1>404 Not Found</h1>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EmailVerify;\r\n"]},"metadata":{},"sourceType":"module"}